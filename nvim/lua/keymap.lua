vim.keymap.set('n', '<Esc>', '<cmd>nohlsearch<CR>')
vim.keymap.set('n', '[d', vim.diagnostic.goto_prev, { desc = 'Go to previous [D]iagnostic message' })
vim.keymap.set('n', ']d', vim.diagnostic.goto_next, { desc = 'Go to next [D]iagnostic message' })
vim.keymap.set('n', '<leader>e', vim.diagnostic.open_float, { desc = 'Show diagnostic [E]rror messages' })
vim.keymap.set('n', '<leader>q', vim.diagnostic.setloclist, { desc = 'Open diagnostic [Q]uickfix list' })
vim.keymap.set('t', '<Esc><Esc>', '<C-\\><C-n>', { desc = 'Exit terminal mode' })
vim.keymap.set('n', '<C-h>', '<C-w><C-h>', { desc = 'Move focus to the left window' })
vim.keymap.set('n', '<C-l>', '<C-w><C-l>', { desc = 'Move focus to the right window' })
vim.keymap.set('n', '<C-j>', '<C-w><C-j>', { desc = 'Move focus to the lower window' })
vim.keymap.set('n', '<C-k>', '<C-w><C-k>', { desc = 'Move focus to the upper window' })
vim.keymap.set('i', 'jj', '<Esc>', { desc = 'Exit insert mode with double j' })

vim.keymap.set('n', '<leader>rr', ':FloatermNew --cwd=<buffer> --autoclose=0 cargo run<CR>', { desc = '[R]ust [R]un' })
vim.keymap.set('n', '<leader>rb', ':FloatermNew --cwd=<buffer> --autoclose=0 cargo build<CR>', { desc = '[R]ust [B]uild' })
vim.keymap.set('n', '<leader>rw', ':FloatermNew --cwd=<buffer> --autoclose=0 wasm-pack build --target bundler<CR>', { desc = '[R]ust [W]eb Build' })
vim.keymap.set('n', '<leader>rt', ':FloatermNew --cwd=<buffer> --autoclose=0 cargo test<CR>', { desc = '[R]ust [T]est' })
vim.keymap.set('n', '<leader>$', ':FloatermToggle --cwd=<buffer> --autoclose=0 <CR>', { desc = 'Open/Close terminal' })

vim.keymap.set('n', '<leader>.', ':Nerdy<CR>', { desc = 'Pick a Nerd Font icon.' })
